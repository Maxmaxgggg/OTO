%                        quadprog
%   Функция возвращает решение задачи квадратичного программирования

%% Задаем целевую функцию
% Матрица вторых частных производных целевой функции
H = [1 -1;-1 2];
% Вектор линейной части функции
f = [-2; -6];

%% Задаем ограничения
% Матрицы линейных ограничений
A = [1 1;-1 2; 2 1];
b = [2; 2; 3];
% Нижняя граница для аргументов функции
lb = zeros(2,1);

%% Решаем задачу оптимизации
% В выводе в консоль присутствуют два новых пункта:
% linearsolver - тип решателя; в данном случае используется решатель для
% плотных матриц, т.е матриц, у которой большая часть элементов ненулевая.
% cgiterations - указывает число итераций, выполненных методом сопряженных градиентов (CG)
% В данном вызове вместо матриц Aeq и beq передаем пустые матрицы
[x,fval,exitflag,output,lambda] = quadprog(H,f,A,b,[], [],lb)
